
#include <helib/FHE.h>

#include "mux-common.hpp"

#ifdef DEBUG
#define show(x) _show(info, x, #x, 90)
#else
#define show(x)
#endif

void _show(EncInfo & info, ctxt_bit vec, std::string name, int size)
{
    std::cout << name << ": ";
    auto decrypted = decrypt_vector(info, vec);
    for (int i = 0; i < size; i++) {
        std::cout << decrypted[i];
    }
    std::cout << "\n";
}

std::vector<int> lanes()
{
    return std::vector<int>{7, 76};
}

compute_data Prep(EncInfo & info, std::unordered_map<std::string, int> inputs)
{

    compute_data data;
    int pad_count = 12;
    
    ptxt t0{0, 0, 1, 0, 0, 0, 0, inputs["input#2.1"], 0, 1, 0, 1, 0, 0, 0, 0, inputs["input#1.1"], inputs["input#3.1"], 0, 0, 0, 0, 1, 0, 1, inputs["input#3.0"], 0, 0, 0, inputs["input#0.1"], inputs["input#2.1"], 1, 1, 0, 0, 0, 0, inputs["input#2.0"], 0, inputs["input#1.1"], inputs["input#1.1"], 0, 0, 1, 0, 0, 0, inputs["input#0.1"], 0, 1, 0, 1, 0, 0, inputs["input#0.1"], inputs["input#2.0"], inputs["input#2.1"], 0, 0, 0, 1, inputs["input#1.1"], 0, 0, 0, 0, 0, 0, inputs["input#3.1"], 0, 0, inputs["input#0.1"], 0, inputs["input#0.1"], 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#1.0"], 1, 1, inputs["input#3.0"], 0, 0};
    data.ciphertexts.push_back(encrypt_vector(info, t0, pad_count, 1));
    ptxt t1{inputs["input#5.0"], 0, inputs["input#5.1"], 0, 0, inputs["input#5.1"], 0, inputs["input#0.1"], inputs["input#4.0"], inputs["input#4.1"], 0, inputs["input#5.1"], 0, 0, 0, 0, inputs["input#3.1"], inputs["input#0.1"], inputs["input#5.0"], 0, 0, inputs["input#4.0"], inputs["input#5.0"], 0, inputs["input#5.0"], 0, 0, 0, 0, inputs["input#1.1"], inputs["input#3.1"], inputs["input#5.1"], inputs["input#5.1"], 0, 0, 0, 0, 0, 0, inputs["input#2.1"], inputs["input#0.1"], 0, inputs["input#5.1"], inputs["input#5.1"], 0, inputs["input#5.0"], inputs["input#5.1"], inputs["input#0.1"], inputs["input#5.1"], inputs["input#4.1"], 0, inputs["input#4.0"], inputs["input#5.0"], inputs["input#4.1"], inputs["input#3.1"], inputs["input#3.0"], 0, 0, 0, inputs["input#0.0"], inputs["input#4.0"], 0, 0, 0, inputs["input#5.1"], 0, 0, 0, 0, 0, inputs["input#5.1"], inputs["input#2.1"], 0, 0, 0, inputs["input#0.1"], inputs["input#5.0"], 0, inputs["input#5.0"], inputs["input#5.0"], 0, 0, inputs["input#3.0"], inputs["input#5.0"], inputs["input#5.0"], inputs["input#0.0"], inputs["input#4.1"], 0};
    data.ciphertexts.push_back(encrypt_vector(info, t1, pad_count, 1));
    ptxt t2{0, 0, 0, 0, inputs["input#2.0"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#0.0"], 0, 0, 0, inputs["input#1.0"], 0, 0, 0, 0, 0, 0, inputs["input#3.0"], 0, inputs["input#1.0"], 0, 0, 0, 0, 0, inputs["input#1.0"], inputs["input#0.0"], 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#0.0"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#2.0"], 0, 0, inputs["input#0.0"], 0, 0, 0, inputs["input#2.0"], 0, 0, inputs["input#3.0"], 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#0.0"], 0, 0, 0, 0, 0, inputs["input#1.0"]};
    data.ciphertexts.push_back(encrypt_vector(info, t2, pad_count, 1));
    ptxt t3{0, 0, 0, 0, inputs["input#0.0"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#3.0"], 0, 0, 0, inputs["input#3.0"], 0, 0, 0, inputs["input#0.0"], 0, 0, inputs["input#0.0"], 0, inputs["input#0.0"], 0, 0, 0, 0, 0, inputs["input#2.0"], inputs["input#2.0"], 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#1.0"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#3.0"], 0, 0, inputs["input#0.0"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    data.ciphertexts.push_back(encrypt_vector(info, t3, pad_count, 1));
    ptxt t4{0, inputs["input#1.0"], 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#0.0"], 0, 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#2.0"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#1.0"], 0, 0, 0, 0, 0, 0, 0, inputs["input#1.0"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#0.0"], inputs["input#0.0"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    data.ciphertexts.push_back(encrypt_vector(info, t4, pad_count, 1));
    ptxt t5{0, inputs["input#2.0"], 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, inputs["input#0.0"], 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, inputs["input#0.0"], 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, inputs["input#3.0"], inputs["input#2.0"], 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0};
    data.ciphertexts.push_back(encrypt_vector(info, t5, pad_count, 1));
    ptxt t10{0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0};
    data.plaintexts.push_back(encode_vector(info, t10, pad_count, 1));
    ptxt t22{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#0.0"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#0.0"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    data.ciphertexts.push_back(encrypt_vector(info, t22, pad_count, 1));
    ptxt t23{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#0.0"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, inputs["input#1.0"], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    data.ciphertexts.push_back(encrypt_vector(info, t23, pad_count, 1));
    data.masks["0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000010000000000100000000000010000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000010000000000100000000000010000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000", pad_count, 1);
    data.masks["0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000100000100010000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000100000100010000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000001100000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000001100000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000100000000000000000000000001000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000100000000000000000000000001000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000001000000000000000000000000100000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000001000000000000000000000000100000", pad_count, 1);
    data.masks["0000000000000000000000000100000000000001000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000100000000000001000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000100000000001000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000100000000001000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000001000000000000000100001000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000001000000000000000100001000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000001000100000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000001000100000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000", pad_count, 1);
    data.masks["1000000000000000000000000000000000000000000100000000000000000000000000000000000000000000"] = make_mask(info, "1000000000000000000000000000000000000000000100000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000010000000000000000000001000000000000000000100000000000000000100000"] = make_mask(info, "0000000000000000000000010000000000000000000001000000000000000000100000000000000000100000", pad_count, 1);
    data.masks["0000000000000000000000000000001000000000000000000000000000000100000000000000000000000000"] = make_mask(info, "0000000000000000000000000000001000000000000000000000000000000100000000000000000000000000", pad_count, 1);
    data.masks["0001000000000000000000000000000000000000000100000000000000000000000000000000000000000000"] = make_mask(info, "0001000000000000000000000000000000000000000100000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000100000001000000000000000000000000010000000000000000000000000000000000000"] = make_mask(info, "0000000000000000100000001000000000000000000000000010000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000010000000000000000000000000000000000000001000000000000000"] = make_mask(info, "0000000000000000000000000000000010000000000000000000000000000000000000001000000000000000", pad_count, 1);
    data.masks["0000000000000000000010000000000000000000000010000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000010000000000000000000000010000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000001000000000000000000000000000100000000000000000000000001000000000"] = make_mask(info, "0000000000000000000000001000000000000000000000000000100000000000000000000000001000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000100000000000000000100000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000100000000000000000100000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000101000000000000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000101000000000000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0100101011110100011010010000101011100110010011011101000000110100101101100000001100000100"] = make_mask(info, "0100101011110100011010010000101011100110010011011101000000110100101101100000001100000100", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000100000001000000000000010000001000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000100000001000000000000010000001000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000010100000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000010100000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000010000000000000000100000010000000001000000000000000000000000"] = make_mask(info, "0000000000000000000000000000010000000000000000100000010000000001000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000100000000000000000000000000010000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000100000000000000000000000000010000000000000000000000000", pad_count, 1);
    data.masks["0000000100000000000000000000000000000000000000000000000000000000100000000000000000000000"] = make_mask(info, "0000000100000000000000000000000000000000000000000000000000000000100000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000010000000000000000001000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000010000000000000000001000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000010000000000000000000000001000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000010000000000000000000000001000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000", pad_count, 1);
    data.masks["0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000100000010000000000000000001000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000100000010000000000000000001000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000010000000000100000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000010000000000100000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000", pad_count, 1);
    data.masks["0000000000100000000000010000000000000000000000000000001000000000000000000000000000000000"] = make_mask(info, "0000000000100000000000010000000000000000000000000000001000000000000000000000000000000000", pad_count, 1);
    data.masks["0000100000010000000000000000000000000000000000001000000000000000000000000000000000000000"] = make_mask(info, "0000100000010000000000000000000000000000000000001000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000010000000000000000000000000000000000000010000000000000000000000000000"] = make_mask(info, "0000000000000000000010000000000000000000000000000000000000010000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000001000000100000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000001000000100000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000", pad_count, 1);
    data.masks["0000000000000000000000010000000001000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000010000000001000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000000000000010001000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000000000000010001000000000000000", pad_count, 1);
    data.masks["0000000000000100000000000000000000000000000000000000000001000000000000000000000000000000"] = make_mask(info, "0000000000000100000000000000000000000000000000000000000001000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000001000000000000000000000001000000000010000000000000000000000000"] = make_mask(info, "0000000000000000000000000001000000000000000000000001000000000010000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000100010000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000100010000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100", pad_count, 1);
    data.masks["0000000010000000000000000000000000000000000000000000000100000000000000001000001000000000"] = make_mask(info, "0000000010000000000000000000000000000000000000000000000100000000000000001000001000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000001000000000010000000000000000000100000000000000010000000000000000000000000000000000"] = make_mask(info, "0000001000000000010000000000000000000100000000000000010000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000100000000000010000000000000000000000000000001000000000000000000"] = make_mask(info, "0000000000000000000000000100000000000010000000000000000000000000000001000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000100000000000000000000000000000000000000000101000000001000000000000000000000000000"] = make_mask(info, "0000000100000000000000000000000000000000000000000101000000001000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000", pad_count, 1);
    data.masks["0100000000100000000010000000000001000000010000000000000000000000001100000000000000000000"] = make_mask(info, "0100000000100000000010000000000001000000010000000000000000000000001100000000000000000000", pad_count, 1);
    data.masks["0001000000010000100000000000000000000000000100000000000000000000000000000000000000000000"] = make_mask(info, "0001000000010000100000000000000000000000000100000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000001000000000000000000010000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000001000000000000000000010000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000010000001000000000000000000000000100000000000000000000000000000000000000"] = make_mask(info, "0000000000000000010000001000000000000000000000000100000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000000000000000000000101000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000000000000000000000101000000000", pad_count, 1);
    data.masks["0000000000000000000000000100010000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000100010000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000001000000000100000000000000000000000000000000000000000000000001000000000"] = make_mask(info, "0000000000000000001000000000100000000000000000000000000000000000000000000000001000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000010000000000000000000000000000000000000100000000"] = make_mask(info, "0000000000000000000000000000000000000000010000000000000000000000000000000000000100000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000100000000000000000000000000000000000000000000001000000000000000"] = make_mask(info, "0000000000000000000000000100000000000000000000000000000000000000000000001000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000100001000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000100001000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000100000000000000000000010000000000000000000000010000000000000000000100000000"] = make_mask(info, "0000000000000100000000000000000000010000000000000000000000010000000000000000000100000000", pad_count, 1);
    data.masks["0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000001000000000000000000000000000000000000000100000000000000000000000000000"] = make_mask(info, "0000000000000000001000000000000000000000000000000000000000100000000000000000000000000000", pad_count, 1);
    data.masks["0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000001000000000000000000100000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000001000000000000000000100000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0001000000000000000000000100000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0001000000000000000000000100000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000100000000000000000000100000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000100000000000000000000100000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000010000000000000000000000000000000000000001000000000000000000000000000000000000000"] = make_mask(info, "0000000010000000000000000000000000000000000000001000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000001000001000000000000000100000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000001000001000000000000000100000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    data.masks["1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"] = make_mask(info, "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", pad_count, 1);
    return data;
}

ctxt_bit Compute(EncInfo & info, compute_data data)
{
    ctxt_bit v0 = data.ciphertexts[0];
    v0 += data.ciphertexts[1];
    show(v0);
    ctxt_bit s0 = v0;
    info.context.getEA().rotate(s0, 6);
    show(s0);
    ctxt_bit s1 = v0;
    info.context.getEA().rotate(s1, 21);
    show(s1);
    ctxt_bit s2 = v0;
    info.context.getEA().rotate(s2, 27);
    show(s2);
    ctxt_bit s3 = v0;
    info.context.getEA().rotate(s3, 7);
    show(s3);
    ctxt_bit s4 = v0;
    info.context.getEA().rotate(s4, 10);
    show(s4);
    ctxt_bit s5 = v0;
    info.context.getEA().rotate(s5, 87);
    show(s5);
    ctxt_bit s6 = v0;
    info.context.getEA().rotate(s6, 3);
    show(s6);
    ctxt_bit s7 = v0;
    info.context.getEA().rotate(s7, 23);
    show(s7);
    ctxt_bit s8 = v0;
    info.context.getEA().rotate(s8, 83);
    show(s8);
    ctxt_bit s9 = v0;
    info.context.getEA().rotate(s9, 8);
    show(s9);
    ctxt_bit s10 = v0;
    info.context.getEA().rotate(s10, 14);
    show(s10);
    ctxt_bit s11 = v0;
    info.context.getEA().rotate(s11, 65);
    show(s11);
    ctxt_bit s12 = v0;
    info.context.getEA().rotate(s12, 79);
    show(s12);
    ctxt_bit s13 = v0;
    info.context.getEA().rotate(s13, 76);
    show(s13);
    ctxt_bit s14 = v0;
    info.context.getEA().rotate(s14, 74);
    show(s14);
    ctxt_bit s15 = v0;
    info.context.getEA().rotate(s15, 50);
    show(s15);
    ctxt_bit s16 = v0;
    info.context.getEA().rotate(s16, 40);
    show(s16);
    ctxt_bit s17 = v0;
    info.context.getEA().rotate(s17, 49);
    show(s17);
    ctxt_bit s18 = v0;
    info.context.getEA().rotate(s18, 59);
    show(s18);
    ctxt_bit s19 = v0;
    info.context.getEA().rotate(s19, 75);
    show(s19);
    ctxt_bit v1 = data.ciphertexts[2];
    v1.multiplyBy(data.ciphertexts[3]);
    show(v1);
    ctxt_bit s20 = v1;
    info.context.getEA().rotate(s20, 10);
    show(s20);
    ctxt_bit s21 = v1;
    info.context.getEA().rotate(s21, 21);
    show(s21);
    ctxt_bit s22 = v1;
    info.context.getEA().rotate(s22, 27);
    show(s22);
    ctxt_bit s23 = v1;
    info.context.getEA().rotate(s23, 40);
    show(s23);
    ctxt_bit s24 = v1;
    info.context.getEA().rotate(s24, 14);
    show(s24);
    ctxt_bit s25 = v1;
    info.context.getEA().rotate(s25, 7);
    show(s25);
    ctxt_bit s26 = v1;
    info.context.getEA().rotate(s26, 79);
    show(s26);
    ctxt_bit s27 = v1;
    info.context.getEA().rotate(s27, 87);
    show(s27);
    ctxt_bit s28 = v1;
    info.context.getEA().rotate(s28, 83);
    show(s28);
    ctxt_bit s29 = v1;
    info.context.getEA().rotate(s29, 76);
    show(s29);
    ctxt_bit s30 = v1;
    info.context.getEA().rotate(s30, 74);
    show(s30);
    ctxt_bit s31 = v1;
    info.context.getEA().rotate(s31, 72);
    show(s31);
    ctxt_bit t6 = blend_bits({{s15, data.masks["0000100000010000000000000000000000000000000000001000000000000000000000000000000000000000"]}, {s0, data.masks["0000001000000000010000000000000000000100000000000000010000000000000000000000000000000000"]}, {s5, data.masks["0000000010000000000000000000000000000000000000000000000100000000000000001000001000000000"]}, {s11, data.masks["0000000001000000000000000000100000000000000000000000000000000000000000000000000000000000"]}, {s8, data.masks["0000000000000100000000000000000000010000000000000000000000010000000000000000000100000000"]}, {s3, data.masks["0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000"]}, {s4, data.masks["0000000000000000001000000000000000000000000000000000000000100000000000000000000000000000"]}, {s6, data.masks["0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000"]}, {s1, data.masks["0000000000000000000000010000000000000000000001000000000000000000100000000000000000100000"]}, {s14, data.masks["0000000000000000000000000100000000000010000000000000000000000000000001000000000000000000"]}, {s12, data.masks["0000000000000000000000000001000000000000000000000001000000000010000000000000000000000000"]}, {s9, data.masks["0000000000000000000000000000001000000000000000000000000000000100000000000000000000000000"]}, {s2, data.masks["0000000000000000000000000000000010000000000000000000000001000000000000000000000000000000"]}, {s13, data.masks["0000000000000000000000000000000000100000001000000000000010000001000000000000000000000000"]}, {s7, data.masks["0000000000000000000000000000000000000000100010000000000000000000000000000000000000000000"]}, {s10, data.masks["0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000"]}, {s18, data.masks["0000000000000000000000000000000000000000000000010100000000000000000000000000000000000000"]}, {v0, data.masks["0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000"]}, {s16, data.masks["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100"]}, {data.ciphertexts[4], data.masks["0100000000100000000010000000000001000000010000000000000000000000001100000000000000000000"]}});
    ctxt_bit t7 = blend_bits({{s20, data.masks["0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000"]}, {v1, data.masks["0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000"]}, {s26, data.masks["0000000000000000000000000100000000000000000000000000000000000000000000001000000000000000"]}, {s21, data.masks["0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000"]}, {s25, data.masks["0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000"]}, {s24, data.masks["0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"]}, {s22, data.masks["0000000000000000000000000000000000000000001000000000000000000010000000000000000000000000"]}, {s27, data.masks["0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000"]}, {s29, data.masks["0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000"]}, {s30, data.masks["0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000"]}, {s31, data.masks["0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000"]}, {s28, data.masks["0000000000000000000000000000000000000000000000000000000001000000000000000000000000100000"]}, {s23, data.masks["0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000"]}, {data.ciphertexts[5], data.masks["0100101011110100011010010000101011100110010011011101000000110100101101100000001100000100"]}});
    ctxt_bit v2 = t6;
    v2 += t7;
    show(v2);
    ctxt_bit s32 = v2;
    info.context.getEA().rotate(s32, 21);
    show(s32);
    ctxt_bit s33 = v2;
    info.context.getEA().rotate(s33, 20);
    show(s33);
    ctxt_bit s34 = v2;
    info.context.getEA().rotate(s34, 18);
    show(s34);
    ctxt_bit s35 = v2;
    info.context.getEA().rotate(s35, 10);
    show(s35);
    ctxt_bit s36 = v2;
    info.context.getEA().rotate(s36, 11);
    show(s36);
    ctxt_bit s37 = v2;
    info.context.getEA().rotate(s37, 17);
    show(s37);
    ctxt_bit s38 = v2;
    info.context.getEA().rotate(s38, 78);
    show(s38);
    ctxt_bit s39 = v2;
    info.context.getEA().rotate(s39, 8);
    show(s39);
    ctxt_bit s40 = v2;
    info.context.getEA().rotate(s40, 79);
    show(s40);
    ctxt_bit s41 = v2;
    info.context.getEA().rotate(s41, 63);
    show(s41);
    ctxt_bit s42 = v2;
    info.context.getEA().rotate(s42, 23);
    show(s42);
    ctxt_bit s43 = v2;
    info.context.getEA().rotate(s43, 85);
    show(s43);
    ctxt_bit s44 = v2;
    info.context.getEA().rotate(s44, 14);
    show(s44);
    ctxt_bit s45 = v2;
    info.context.getEA().rotate(s45, 7);
    show(s45);
    ctxt_bit s46 = v2;
    info.context.getEA().rotate(s46, 48);
    show(s46);
    ctxt_bit s47 = v2;
    info.context.getEA().rotate(s47, 59);
    show(s47);
    ctxt_bit s48 = v2;
    info.context.getEA().rotate(s48, 39);
    show(s48);
    ctxt_bit s49 = v2;
    info.context.getEA().rotate(s49, 52);
    show(s49);
    ctxt_bit s50 = v2;
    info.context.getEA().rotate(s50, 3);
    show(s50);
    ctxt_bit t8 = blend_bits({{s46, data.masks["0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000"]}, {v2, data.masks["0000000000000000001000000000100000000000000000000000000000000000000000000000001000000000"]}, {s48, data.masks["0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000"]}, {s34, data.masks["0000000000000000000000001000000100000000000000000000000000000000000000000000000000000000"]}, {s43, data.masks["0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000"]}, {s36, data.masks["0000000000000000000000000000000000000000010000000000000000001000000000000000000000000000"]}, {s49, data.masks["0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000"]}, {s45, data.masks["0000000000000000000000000000000000000000000000000001100000000000000000000000000000000000"]}, {s41, data.masks["0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000"]}, {s39, data.masks["0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000"]}});
    ctxt_bit t9 = blend_bits({{s38, data.masks["0000000100000000000000000000000000000000000000000101000000001000000000000000000000000000"]}, {s35, data.masks["0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000"]}, {s36, data.masks["0000000000000000000010000000000000000000000000000000000000010000000000000000000000000000"]}, {s33, data.masks["0000000000000000000000001000000000000000000000000000100000000000000000000000001000000000"]}, {s37, data.masks["0000000000000000000000000000100000000000000000000000001000000000000000000000000000000000"]}, {s43, data.masks["0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000"]}, {s47, data.masks["0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000"]}, {s34, data.masks["0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000"]}});
    ctxt_bit v3 = t8;
    v3.multiplyBy(t9);
    show(v3);
    ctxt_bit s51 = v3;
    info.context.getEA().rotate(s51, 19);
    show(s51);
    ctxt_bit s52 = v3;
    info.context.getEA().rotate(s52, 3);
    show(s52);
    ctxt_bit s53 = v3;
    info.context.getEA().rotate(s53, 60);
    show(s53);
    ctxt_bit s54 = v3;
    info.context.getEA().rotate(s54, 22);
    show(s54);
    ctxt_bit s55 = v3;
    info.context.getEA().rotate(s55, 74);
    show(s55);
    ctxt_bit s56 = v3;
    info.context.getEA().rotate(s56, 27);
    show(s56);
    ctxt_bit s57 = v3;
    info.context.getEA().rotate(s57, 37);
    show(s57);
    ctxt_bit s58 = v3;
    info.context.getEA().rotate(s58, 76);
    show(s58);
    ctxt_bit s59 = v3;
    info.context.getEA().rotate(s59, 12);
    show(s59);
    ctxt_bit s60 = v3;
    info.context.getEA().rotate(s60, 15);
    show(s60);
    ctxt_bit s61 = v3;
    info.context.getEA().rotate(s61, 10);
    show(s61);
    ctxt_bit s62 = v3;
    info.context.getEA().rotate(s62, 75);
    show(s62);
    ctxt_bit s63 = v3;
    info.context.getEA().rotate(s63, 8);
    show(s63);
    ctxt_bit s64 = v3;
    info.context.getEA().rotate(s64, 1);
    show(s64);
    ctxt_bit s65 = v3;
    info.context.getEA().rotate(s65, 77);
    show(s65);
    ctxt_bit s66 = v3;
    info.context.getEA().rotate(s66, 43);
    show(s66);
    ctxt_bit s67 = v3;
    info.context.getEA().rotate(s67, 53);
    show(s67);
    ctxt_bit s68 = v3;
    info.context.getEA().rotate(s68, 66);
    show(s68);
    ctxt_bit s69 = v3;
    info.context.getEA().rotate(s69, 79);
    show(s69);
    ctxt_bit s70 = v3;
    info.context.getEA().rotate(s70, 49);
    show(s70);
    ctxt_bit s71 = v3;
    info.context.getEA().rotate(s71, 81);
    show(s71);
    ctxt_bit t11 = blend_bits({{s55, data.masks["0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000"]}, {s66, data.masks["0000000100000010000000000000000001000000000000000000000000000000000000000000000000000000"]}, {s52, data.masks["0000000000100000000000010000000000000000000000000000001000000000000000000000000000000000"]}, {s70, data.masks["0000000000000101000000000000000000000000000000000000000000000000000000000000000000000000"]}, {s65, data.masks["0000000000000000010000001000000000000000000000000100000000000000000000000000000000000000"]}, {s68, data.masks["0000000000000000000100000000000000000100000000000000000000000000000000000000000000000000"]}, {s54, data.masks["0000000000000000000000000000010000000000000000100000010000000001000000000000000000000000"]}, {s60, data.masks["0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000"]}, {s63, data.masks["0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000"]}, {s69, data.masks["0000000000000000000000000000000000000000100000000001000000000000000000000000000000000000"]}, {s61, data.masks["0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000"]}, {s71, data.masks["0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000"]}, {s57, data.masks["0000000000000000000000000000000000000000000000000000000100000100010000000000000000000000"]}, {s56, data.masks["0000000000000000000000000000000000000000000000000000000000000000000000000000101000000000"]}, {s64, data.masks["0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000"]}});
    ctxt_bit v4 = t11;
    v4 += data.plaintexts[0];
    show(v4);
    ctxt_bit s72 = v4;
    info.context.getEA().rotate(s72, 3);
    show(s72);
    ctxt_bit s73 = v4;
    info.context.getEA().rotate(s73, 36);
    show(s73);
    ctxt_bit s74 = v4;
    info.context.getEA().rotate(s74, 14);
    show(s74);
    ctxt_bit s75 = v4;
    info.context.getEA().rotate(s75, 34);
    show(s75);
    ctxt_bit s76 = v4;
    info.context.getEA().rotate(s76, 5);
    show(s76);
    ctxt_bit s77 = v4;
    info.context.getEA().rotate(s77, 12);
    show(s77);
    ctxt_bit s78 = v4;
    info.context.getEA().rotate(s78, 80);
    show(s78);
    ctxt_bit s79 = v4;
    info.context.getEA().rotate(s79, 27);
    show(s79);
    ctxt_bit s80 = v4;
    info.context.getEA().rotate(s80, 8);
    show(s80);
    ctxt_bit s81 = v4;
    info.context.getEA().rotate(s81, 78);
    show(s81);
    ctxt_bit s82 = v4;
    info.context.getEA().rotate(s82, 68);
    show(s82);
    ctxt_bit s83 = v4;
    info.context.getEA().rotate(s83, 64);
    show(s83);
    ctxt_bit s84 = v4;
    info.context.getEA().rotate(s84, 52);
    show(s84);
    ctxt_bit s85 = v4;
    info.context.getEA().rotate(s85, 73);
    show(s85);
    ctxt_bit t12 = blend_bits({{s67, data.masks["1000000000000000000000000000000000000000000100000000000000000000000000000000000000000000"]}, {s58, data.masks["0000000010000000000000000000000000000000000000001000000000000000000000000000000000000000"]}, {s62, data.masks["0000000000010000000000100000000000000000000000000000000000000000000000000000000000000000"]}, {s65, data.masks["0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000"]}, {s51, data.masks["0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000"]}, {s55, data.masks["0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000"]}, {s59, data.masks["0000000000000000000000000000000010000000000000000000000000000000000000001000000000000000"]}, {s61, data.masks["0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000"]}, {s52, data.masks["0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000"]}, {s64, data.masks["0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"]}, {s68, data.masks["0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000"]}, {s63, data.masks["0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000"]}, {s53, data.masks["0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000"]}, {s60, data.masks["0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000"]}, {s66, data.masks["0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000"]}});
    ctxt_bit t13 = blend_bits({{s41, data.masks["1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"]}, {s48, data.masks["0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000"]}, {s40, data.masks["0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000"]}, {s17, data.masks["0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000"]}, {s32, data.masks["0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000"]}, {s49, data.masks["0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000"]}, {s39, data.masks["0000000000000000000000000001000000000000000100001000000000000000000000000000000000000000"]}, {s11, data.masks["0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000"]}, {s33, data.masks["0000000000000000000000000000000000100000000000000000000000000010000000000000000000000000"]}, {s15, data.masks["0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000"]}, {s43, data.masks["0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"]}, {s42, data.masks["0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000"]}, {v2, data.masks["0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000"]}, {s50, data.masks["0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000"]}, {s19, data.masks["0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000"]}, {s36, data.masks["0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000"]}});
    ctxt_bit v5 = t12;
    v5.multiplyBy(t13);
    show(v5);
    ctxt_bit s86 = v5;
    info.context.getEA().rotate(s86, 3);
    show(s86);
    ctxt_bit s87 = v5;
    info.context.getEA().rotate(s87, 83);
    show(s87);
    ctxt_bit s88 = v5;
    info.context.getEA().rotate(s88, 34);
    show(s88);
    ctxt_bit s89 = v5;
    info.context.getEA().rotate(s89, 36);
    show(s89);
    ctxt_bit s90 = v5;
    info.context.getEA().rotate(s90, 73);
    show(s90);
    ctxt_bit s91 = v5;
    info.context.getEA().rotate(s91, 8);
    show(s91);
    ctxt_bit s92 = v5;
    info.context.getEA().rotate(s92, 12);
    show(s92);
    ctxt_bit s93 = v5;
    info.context.getEA().rotate(s93, 68);
    show(s93);
    ctxt_bit s94 = v5;
    info.context.getEA().rotate(s94, 64);
    show(s94);
    ctxt_bit s95 = v5;
    info.context.getEA().rotate(s95, 51);
    show(s95);
    ctxt_bit s96 = v5;
    info.context.getEA().rotate(s96, 52);
    show(s96);
    ctxt_bit s97 = v5;
    info.context.getEA().rotate(s97, 78);
    show(s97);
    ctxt_bit t14 = blend_bits({{s84, data.masks["0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000"]}, {s76, data.masks["0000000000000000000010000000000000000000000010000000000000000000000000000000000000000000"]}, {s83, data.masks["0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000"]}, {s81, data.masks["0000000000000000000000000100000000000001000000000000000000000000000000000000000000000000"]}, {s72, data.masks["0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000"]}, {s82, data.masks["0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000"]}, {s74, data.masks["0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000"]}, {s78, data.masks["0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000"]}});
    ctxt_bit t15 = blend_bits({{s38, data.masks["0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000"]}, {s35, data.masks["0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000"]}, {s48, data.masks["0000000000000000000000010000000001000000000000000000000000000000000000000000000000000000"]}, {s13, data.masks["0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000"]}, {s47, data.masks["0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000"]}, {s41, data.masks["0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000"]}, {s10, data.masks["0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000"]}, {s14, data.masks["0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000"]}, {s44, data.masks["0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000"]}});
    ctxt_bit v6 = t14;
    v6.multiplyBy(t15);
    show(v6);
    ctxt_bit s98 = v6;
    info.context.getEA().rotate(s98, 47);
    show(s98);
    ctxt_bit s99 = v6;
    info.context.getEA().rotate(s99, 12);
    show(s99);
    ctxt_bit s100 = v6;
    info.context.getEA().rotate(s100, 15);
    show(s100);
    ctxt_bit s101 = v6;
    info.context.getEA().rotate(s101, 65);
    show(s101);
    ctxt_bit s102 = v6;
    info.context.getEA().rotate(s102, 85);
    show(s102);
    ctxt_bit t16 = blend_bits({{s87, data.masks["0001000000000000000000000000000000000000000100000000000000000000000000000000000000000000"]}, {s86, data.masks["0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000"]}, {s95, data.masks["0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000"]}, {s96, data.masks["0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"]}, {s94, data.masks["0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000"]}, {s91, data.masks["0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000"]}, {s89, data.masks["0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000"]}, {s97, data.masks["0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000"]}});
    ctxt_bit t17 = blend_bits({{s101, data.masks["0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000"]}, {s102, data.masks["0000000000000000000000000000001000001000000000000000100000000000000000000000000000000000"]}, {s99, data.masks["0000000000000000000000000000000010000000000100000000000010000000000000000000000000000000"]}, {s100, data.masks["0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000"]}, {s98, data.masks["0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000"]}});
    ctxt_bit v7 = t16;
    v7 += t17;
    show(v7);
    ctxt_bit s103 = v7;
    info.context.getEA().rotate(s103, 43);
    show(s103);
    ctxt_bit s104 = v7;
    info.context.getEA().rotate(s104, 74);
    show(s104);
    ctxt_bit s105 = v7;
    info.context.getEA().rotate(s105, 24);
    show(s105);
    ctxt_bit s106 = v7;
    info.context.getEA().rotate(s106, 61);
    show(s106);
    ctxt_bit t18 = blend_bits({{s64, data.masks["0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000"]}, {s63, data.masks["0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"]}});
    ctxt_bit t19 = blend_bits({{s104, data.masks["0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000"]}, {v7, data.masks["0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"]}});
    ctxt_bit v8 = t18;
    v8.multiplyBy(t19);
    show(v8);
    ctxt_bit s107 = v8;
    info.context.getEA().rotate(s107, 1);
    show(s107);
    ctxt_bit s108 = v8;
    info.context.getEA().rotate(s108, 68);
    show(s108);
    ctxt_bit t20 = blend_bits({{s78, data.masks["0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000"]}, {s74, data.masks["0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000"]}, {s82, data.masks["0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000"]}, {s77, data.masks["0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000"]}, {v4, data.masks["0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000"]}, {s85, data.masks["0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"]}, {s79, data.masks["0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000"]}});
    ctxt_bit t21 = blend_bits({{s104, data.masks["0000000000000000100000001000000000000000000000000010000000000000000000000000000000000000"]}, {s106, data.masks["0000000000000000000000000100010000000000000000000000000000000000000000000000000000000000"]}, {s103, data.masks["0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000"]}, {s105, data.masks["0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000"]}});
    ctxt_bit v9 = t20;
    v9.multiplyBy(t21);
    show(v9);
    ctxt_bit s109 = v9;
    info.context.getEA().rotate(s109, 75);
    show(s109);
    ctxt_bit s110 = v9;
    info.context.getEA().rotate(s110, 68);
    show(s110);
    ctxt_bit t24 = blend_bits({{s86, data.masks["0001000000000000000000000100000000000000000000000000000000000000000000000000000000000000"]}, {s90, data.masks["0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000"]}, {s108, data.masks["0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000"]}, {s107, data.masks["0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000"]}, {s91, data.masks["0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"]}, {s94, data.masks["0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000"]}, {s92, data.masks["0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000"]}, {data.ciphertexts[6], data.masks["0000000000000100000000000000000000000000000000000000000001000000000000000000000000000000"]}});
    ctxt_bit t25 = blend_bits({{s109, data.masks["0001000000010000100000000000000000000000000100000000000000000000000000000000000000000000"]}, {v9, data.masks["0000000000000000000000000100000000000000000000100000000000000000000000000000000000000000"]}, {s110, data.masks["0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000"]}, {s100, data.masks["0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"]}, {data.ciphertexts[7], data.masks["0000000000000100000000000000000000000000000000000000000001000000000000000000000000000000"]}});
    ctxt_bit v10 = t24;
    v10 += t25;
    show(v10);
    ctxt_bit s111 = v10;
    info.context.getEA().rotate(s111, 76);
    show(s111);
    ctxt_bit s112 = v10;
    info.context.getEA().rotate(s112, 36);
    show(s112);
    ctxt_bit s113 = v10;
    info.context.getEA().rotate(s113, 23);
    show(s113);
    ctxt_bit s114 = v10;
    info.context.getEA().rotate(s114, 79);
    show(s114);
    ctxt_bit s115 = v10;
    info.context.getEA().rotate(s115, 16);
    show(s115);
    ctxt_bit s116 = v10;
    info.context.getEA().rotate(s116, 15);
    show(s116);
    ctxt_bit s117 = v10;
    info.context.getEA().rotate(s117, 24);
    show(s117);
    ctxt_bit s118 = v10;
    info.context.getEA().rotate(s118, 82);
    show(s118);
    ctxt_bit s119 = v10;
    info.context.getEA().rotate(s119, 72);
    show(s119);
    ctxt_bit t26 = blend_bits({{s72, data.masks["0000000100000000000000000000000000000000000000000000000000000000100000000000000000000000"]}, {s80, data.masks["0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000"]}, {s73, data.masks["0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000"]}, {s81, data.masks["0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000"]}, {s75, data.masks["0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000"]}, {v4, data.masks["0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000"]}});
    ctxt_bit t27 = blend_bits({{s114, data.masks["0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000"]}, {s115, data.masks["0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000"]}, {v10, data.masks["0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000"]}, {s116, data.masks["0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000"]}, {s112, data.masks["0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000"]}, {s117, data.masks["0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000"]}, {s111, data.masks["0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000"]}});
    ctxt_bit v11 = t26;
    v11.multiplyBy(t27);
    show(v11);
    ctxt_bit s120 = v11;
    info.context.getEA().rotate(s120, 38);
    show(s120);
    ctxt_bit s121 = v11;
    info.context.getEA().rotate(s121, 25);
    show(s121);
    ctxt_bit s122 = v11;
    info.context.getEA().rotate(s122, 83);
    show(s122);
    ctxt_bit s123 = v11;
    info.context.getEA().rotate(s123, 69);
    show(s123);
    ctxt_bit t28 = blend_bits({{s90, data.masks["0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000"]}, {s88, data.masks["0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000"]}, {s89, data.masks["0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000"]}});
    ctxt_bit t29 = blend_bits({{v11, data.masks["0000000000000000000000000000000000000000010000000000000000000000000000000000000100000000"]}, {s123, data.masks["0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000"]}});
    ctxt_bit v12 = t28;
    v12 += t29;
    show(v12);
    ctxt_bit s124 = v12;
    info.context.getEA().rotate(s124, 9);
    show(s124);
    ctxt_bit s125 = v12;
    info.context.getEA().rotate(s125, 68);
    show(s125);
    ctxt_bit t30 = blend_bits({{s62, data.masks["0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"]}, {s54, data.masks["0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"]}, {s65, data.masks["0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000"]}, {s56, data.masks["0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000"]}, {s69, data.masks["0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"]}, {v3, data.masks["0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000"]}, {s63, data.masks["0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000"]}});
    ctxt_bit t31 = blend_bits({{s113, data.masks["0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"]}, {s118, data.masks["0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"]}, {s119, data.masks["0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000"]}, {v12, data.masks["0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000"]}, {s124, data.masks["0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"]}, {s125, data.masks["0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000"]}, {s37, data.masks["0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000"]}});
    ctxt_bit v13 = t30;
    v13.multiplyBy(t31);
    show(v13);
    ctxt_bit s126 = v13;
    info.context.getEA().rotate(s126, 27);
    show(s126);
    ctxt_bit s127 = v13;
    info.context.getEA().rotate(s127, 66);
    show(s127);
    ctxt_bit s128 = v13;
    info.context.getEA().rotate(s128, 12);
    show(s128);
    ctxt_bit t32 = blend_bits({{v14, data.masks["0000000000000000000000000000000000000000100001000000000000000000000000000000000000000000"]}, {s126, data.masks["0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000"]}, {s128, data.masks["0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000"]}});
    ctxt_bit t33 = blend_bits({{s122, data.masks["0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"]}, {s120, data.masks["0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000"]}, {s121, data.masks["0000000000000000000000000000000000000000000000000000000000000000000010001000000000000000"]}});
    ctxt_bit v14 = t32;
    v14 += t33;
    show(v14);
    ctxt_bit s129 = v14;
    info.context.getEA().rotate(s129, 5);
    show(s129);
    ctxt_bit s130 = v14;
    info.context.getEA().rotate(s130, 68);
    show(s130);
    ctxt_bit t34 = blend_bits({{s72, data.masks["0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"]}, {s80, data.masks["0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000"]}, {s73, data.masks["0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"]}, {s83, data.masks["0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000"]}});
    ctxt_bit t35 = blend_bits({{v15, data.masks["0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"]}, {s130, data.masks["0000000000000000000000000000000000000000000000001000100000000000000000000000000000000000"]}, {s129, data.masks["0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"]}});
    ctxt_bit v15 = t34;
    v15.multiplyBy(t35);
    show(v15);
    ctxt_bit s131 = v15;
    info.context.getEA().rotate(s131, 85);
    show(s131);
    ctxt_bit s132 = v15;
    info.context.getEA().rotate(s132, 15);
    show(s132);
    ctxt_bit s133 = v15;
    info.context.getEA().rotate(s133, 66);
    show(s133);
    ctxt_bit t36 = blend_bits({{s93, data.masks["0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000"]}, {s127, data.masks["0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000"]}, {v14, data.masks["0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"]}, {s126, data.masks["0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000"]}});
    ctxt_bit t37 = blend_bits({{s133, data.masks["0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000"]}, {s131, data.masks["0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000"]}, {v16, data.masks["0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"]}, {s132, data.masks["0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000"]}});
    ctxt_bit v16 = t36;
    v16 += t37;
    show(v16);
    ctxt_bit s134 = v16;
    info.context.getEA().rotate(s134, 7);
    show(s134);
    ctxt_bit s135 = v16;
    info.context.getEA().rotate(s135, 33);
    show(s135);
    ctxt_bit t38 = blend_bits({{s55, data.masks["0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000"]}, {s72, data.masks["0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000"]}, {s51, data.masks["0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000"]}});
    ctxt_bit v17 = t38;
    v17.multiplyBy(s134);
    show(v17);
    ctxt_bit s136 = v17;
    info.context.getEA().rotate(s136, 20);
    show(s136);
    ctxt_bit s137 = v17;
    info.context.getEA().rotate(s137, 75);
    show(s137);
    ctxt_bit v18 = s78;
    v18.multiplyBy(s135);
    show(v18);
    ctxt_bit s138 = v18;
    info.context.getEA().rotate(s138, 75);
    show(s138);
    ctxt_bit v19 = s137;
    v19 += v18;
    show(v19);
    ctxt_bit v20 = s136;
    v20 += s138;
    show(v20);
    ctxt_bit v22 = blend_bits({{v20, data.masks["0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000"]}, {v21, data.masks["0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000"]}});
    return v22;
}
    